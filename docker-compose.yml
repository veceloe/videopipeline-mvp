services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    platform: linux/arm64
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.7
    platform: linux/arm64
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_MESSAGE_MAX_BYTES: 10000000
      ALLOW_PLAINTEXT_LISTENER: "yes"

  minio:
    image: quay.io/minio/minio:latest
    platform: linux/arm64
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data

  ytsaurus:
    image: ghcr.io/ytsaurus/local:stable-spyt
    platform: linux/amd64
    shm_size: "2g"
    environment:
      YT_USE_SINGLETON: "1"
      YT_ENABLE_HTTP_PROXY: "1"
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ytsaurus-ui:
    build:
      context: .
      dockerfile: Dockerfile
    image: local-ytsaurus-ui:latest
    platform: linux/amd64
    depends_on:
      ytsaurus:
        condition: service_healthy
    ports:
      - "8080:80"
    volumes:
      - ./clusters-config.json:/opt/app/clusters-config.json:ro
      - ./stages:/opt/app/stages:ro
#      - ./secrets/yt-interface-secret.json:/opt/app/secrets/yt-interface-secret.json:ro
    environment:
      - NODE_ENV=production
      - APP_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  spark:
    image: bitnami/spark:3.3.2
    platform: linux/arm64
    depends_on:
      - kafka
      - ytsaurus
      - minio
    environment:
      SPARK_MODE: driver
      SPARK_MASTER_URL: local
    volumes:
      - ./spark-app/target/scala-2.12/videopipeline.jar:/opt/spark/app/videopipeline.jar
    command: >
      spark-submit
        --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.2,
                   org.apache.hadoop:hadoop-aws:3.3.2,
                   tech.ytsaurus:spark-yt_2.12:2.6.3
        --class VideoStreamProcessor
        /opt/spark/app/videopipeline.jar

  producer:
    build: ./producer
    platform: linux/arm64
    depends_on:
      - kafka
    volumes:
      - ./media:/media

volumes:
  minio-data: